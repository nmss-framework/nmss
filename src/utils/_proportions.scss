/*_ UTILS ______________________________________________________________________________________________________________
    
    Proportions

    Proportional width system

    We're using a 5% increment system without columns to keep the design free of
    constrains. This is important when designing interfaces as the column system
    fails at the micro level when designing interfaces. 

*/
//_ CONFIGURATION ______________________________________________________________________________________________________

//  Number of slices of a 100% scale that will be generated
    $steps: 20;

//  Custom widths that will be generated among the proportions
    $customWidths: (
        100:   1,
        3rd:   0.3333333333333333,
        6th:   0.1666666666666667,
        7th:   0.1428571428571429
    );

//_ DEFINITION _________________________________________________________________________________________________________

/*  utility mixin

    Creates a new rule at root with the prefix u- */

    @mixin utility($name) {

        @at-root %u-#{$name} {
            @content;
        }
        
        @at-root .u-#{$name} {
            @content;
        }     
    }

/*  createWidths mixin

    Generates all available widths using the given steps
    Create the className interpolating breakpoint name for every step. */

    @mixin createWidths() {
        @for $key from 1 to $steps {
            $tmpSize: floor($key / $steps*100);
            
            @include utility(#{$tmpSize}) {
                width: percentage($key / $steps) !important;
            }
        }
        @each $width, $size in $customWidths {
            $tmpSize: $width;

            @include utility(#{$tmpSize}) {
                width: percentage($size) !important;
            }
        } 
    }

    @include createWidths();